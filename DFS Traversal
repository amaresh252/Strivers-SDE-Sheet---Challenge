#include<bits/stdc++.h>

void dfs(int ind,vector<int> adj[],vector<int> &v,vector<int> &vis){
 
 vis[ind]=1;
 v.push_back(ind);
 for(auto it:adj[ind]){
     if(!vis[it]){
         dfs(it,adj,v,vis);
     }
 }
}


vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{   
    vector<vector<int>> ans;
    vector<int>adj[V];
    for(int i=0;i<edges.size();i++){
        adj[edges[i][0]].push_back(edges[i][1]);
         adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<int> vis(V,0);
    for(int i=0;i<V;i++){
        if(!vis[i]){
            vector<int> v;
            dfs(i,adj,v,vis);
            ans.push_back(v);
        }
    }
    return ans;
    

}
