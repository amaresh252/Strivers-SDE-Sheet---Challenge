#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    if(root==NULL ) return {};
        vector<int>  ans;
       queue<BinaryTreeNode<int>*> q;
       int lefttoright=1;
       q.push(root);
       while(!q.empty()){
           int size=q.size();
           vector<int> v(size);
           for(int i=0;i<size;i++){
               BinaryTreeNode<int>* node=q.front();
               q.pop();
               int ind=lefttoright?i:(size-1-i);
               v[ind]=node->data;
            
               if(node->left) q.push(node->left);
               if(node->right) q.push(node->right);

           }
           lefttoright=abs(1-lefttoright);
           for(int i=0;i<v.size();i++) ans.push_back(v[i]);
       }
       return ans;
}
