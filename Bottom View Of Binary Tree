#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    vector<int> ans;
        map<int,int> m;
        if(!root) return ans;
        
        queue<pair<int,BinaryTreeNode<int> *>> q;
        q.push({0,root});
        while(!q.empty()){
            BinaryTreeNode<int> * node=q.front().second;
            int x=q.front().first;
            q.pop();
            
            m[x]=node->data;
            if(node->left) q.push({x-1,node->left});
            if(node->right) q.push({x+1,node->right});
            
        }
        for(auto it:m){
            ans.push_back(it.second);
        }
        return ans;
    
}
