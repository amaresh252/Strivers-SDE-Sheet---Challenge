double median(vector<int>& a, vector<int>& b) {
	
	int n=a.size(),m=b.size();
	if(m<n){
		median(b,a);
	}
	int len=(n+m+1)/2;
	int low=0,high=n-1,mid;
	while(low<=high){
		mid=(low+high)>>1;
		
		int l1= mid==0?INT_MIN:a[mid-1];
		int r1= mid==n?INT_MAX:a[mid];
		int elefromb=len-mid;
		int l2= elefromb==0?INT_MIN:b[elefromb-1];
		int r2= elefromb==m?INT_MAX:b[elefromb];
		if(l1<=r2 && l2<=r1){
			if((m+n)%2==0){
				return ((double)max(l1,l2)+(double)min(r1,r2))/2.0;
			}
			else return (double)max(l1,l2);
		}
		else {
			if(l1>r2){
				high=mid-1;
			}
			else {
				low=mid+1;
			}
		}


	}
	return -1;

}
