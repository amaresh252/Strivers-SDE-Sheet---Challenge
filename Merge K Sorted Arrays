#include <bits/stdc++.h> 
vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{  vector<int>  ans;
int n=kArrays[0].size();
    typedef pair<int,pair<int,int>> pii;
   priority_queue<pii,vector<pii>,greater<pii>> pq;
    for(int i=0;i<k;i++){
        pq.push({kArrays[i][0],{i,0}});
    }
    while(pq.size()>0){
        ans.push_back(pq.top().first);
        int i=pq.top().second.first;
        int j=pq.top().second.second;
        pq.pop();
        if(j+1<kArrays[i].size()){
          pq.push({kArrays[i][j + 1], {i, j + 1}});
        }
    }
    return ans;
}
